// dynamically load event list into the mainPane
$('#mainPane').find('.dynamicContent').html("<%= escape_javascript(render partial: 'events_list', locals: { venue_event_months: @venue_event_months } || "There are no events at the moment") %>");

// truncate event descriptions
$('#events').find('.dotdotdot').dotdotdot({
	watch: true, //	Whether to update the ellipsis as the window resizes: true/'window'
	callback	: function( isTruncated, orgContent ) {	
	}//	Callback function that is fired after the ellipsis is added, receives two parameters: isTruncated(boolean), orgContent(string).
});

//  binds a touch handler for the Event buttons (i.e. the buttons that contain a calendar date and show event details) 
// toggleEventDescription() allows user to toggle between full and partial descriptions of the event
bindTouchButtons({
	scope: "#events",
	buttonCollection: ".btn-glass",
	mode: "flash",
	callback: function(){
		toggleEventDescription(this); // "this" passes the $(this) object to initEventButtons(button_obj) function
	}
});

//  binds a touch handler for the Event buttons (i.e. the buttons that contain a calendar date and show event details) 
//  takes user to tearsheet of the venue for the event when user clicks on an Event button
bindTouchButtons({
	scope: "#events",
	buttonCollection: ".rightPane",
	stopPropagation: true, // need to use jquery .stopPropagation() in order to prevent "a" element from bubbling up to .btn-glass and triggering toggleEventDescription() in code above
	mode: "flash",
	callback: function(){
		var jqObj = $(this);
		var url = jqObj.attr("href"); // get the url of the button
		
		$("#rightPane").find(".preloader").show(); // .preloader in rightPane needs to be showing before rightPane is opened
					
		// open rightPane
		togglePane({
			state: "open",
			title: jqObj.data("title"),
			callback: function(){
				// load content
				loadContent(url, {
					pane: "rightPane"
				});
			}
		});
	}
});

// mainPane: enables touch behavior and toggling for filter button
bindTouchButtons({
	scope: "#navbar_bottom",
	buttonCollection: "#filter_button",
	mode: "flash",
	callback: function(){
		var sliderTitle = "Filter Results";
		toggleSlider({
			title: sliderTitle
		});
	}
});



/* BEGIN DEBUG */


$("#events").on("click", ".rightPane", function(event){
	var jqObj = $(this);
	var url = jqObj.attr("href"); // get the url of the button
	
	$("#rightPane").find(".preloader").show(); // .preloader in rightPane needs to be showing before rightPane is opened
				
	// open rightPane
	togglePane({
		state: "open",
		title: jqObj.data("title"),
		callback: function(){
			// load content
			loadContent(url, {
				pane: "rightPane"
			});
		}
	});	

	// need to use .stopPropagation otherwise, clicking on the link will also trigger toggleEventDescription()
	return false; // event.stopPropagation(); + event.preventDefault();
});

$("#events").on("click", ".btn-glass", function(event){	
	toggleEventDescription($(this));
	
	event.preventDefault();
});

/* END DEBUG */